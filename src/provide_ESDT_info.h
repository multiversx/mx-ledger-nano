#ifndef _PROVIDE_ESDT_INFO_H_
#define _PROVIDE_ESDT_INFO_H_

#include <stdint.h>
#include <constants.h>

#define MAX_ESDT_TICKER_LEN     32
#define MAX_ESDT_IDENTIFIER_LEN 32

static const uint8_t LEDGER_SIGNATURE_PUBLIC_KEY[] = {
    0x04, 0x3e, 0xd6, 0x7b, 0x06, 0xba, 0x64, 0x50, 0x97, 0x15, 0x84, 0x88, 0x33, 0xca, 0x09,
    0x0d, 0xb2, 0x33, 0x0a, 0x07, 0xba, 0x7f, 0xb8, 0x6d, 0xfa, 0xe7, 0x7d, 0x73, 0xee, 0xa2,
    0xd8, 0xac, 0xa6, 0x75, 0x90, 0x0c, 0x75, 0x11, 0x3a, 0xc9, 0x7c, 0x58, 0xaa, 0xab, 0x3c,
    0x0a, 0xfb, 0x57, 0x6b, 0xda, 0x6b, 0x4b, 0x13, 0xab, 0x65, 0xbc, 0x9c, 0xe3, 0x86, 0xcf,
    0x2c, 0xc5, 0x56, 0x0d, 0x09};

typedef struct esdt_info_t {
    uint8_t ticker_len;
    char ticker[MAX_ESDT_TICKER_LEN];
    uint8_t identifier_len;
    char identifier[MAX_ESDT_IDENTIFIER_LEN];
    uint8_t decimals;
    uint8_t chain_id_len;
    char chain_id[MAX_CHAINID_LEN];
} esdt_info_t;

extern esdt_info_t esdt_info;

uint16_t handle_provide_ESDT_info(const uint8_t *data_buffer, uint16_t data_length, esdt_info_t *esdt_info);

#endif
